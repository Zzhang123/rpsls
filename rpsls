#coding:gbk
"""
程序目标：完成RPSLS（Rock-paper-scissors-lizard-Spock）游戏。
姓名：张春雨
"""

import random #调用random模块。
comp_number=random.randint(0,4) # 用random.randrange()自动产生0-4之间的随机整数，作为计算机随机选择的游戏对象，存入变量comp_number。

def name_to_number(name):  #自定义函数，使用if/elif/else语句将各游戏对象对应到不同的整数。
	"""
    将游戏对象对应到不同的整数
    """
	if name=="石头":
		return 0
	elif name=="史波克":
		return 1
	elif name=="纸":
		return 2
	elif name=="蜥蜴":
		return 3
	else:
		return 4
		

def number_to_name(number):   #自定义函数，使用if/elif/else语句将不同的整数对应到游戏的不同对象。
	"""
    将整数 (0, 1, 2, 3, or 4)对应到游戏的不同对象
    """
	if number==0:
		return "石头"
		
	elif number==1:
		return "史波克"
		
	elif number==2:
		return "纸"
		
	elif number==3:
		return "蜥蜴"
	else:
		return "剪刀"


def rpsls(player_choice_number,comp_number):  #利用if/elif/else 语句，根据RPSLS规则对用户选择和计算机选择进行判断，并在屏幕上显示判断结果。
	"""
    用户玩家任意给出一个选择，根据RPSLS游戏规则，在屏幕上输出对应的结果

    """
	if player_choice_number==comp_number:
		return "您和计算机出的一样呢！" # 如果满足上述条件，则用户和计算机选择一样，显示“您和计算机出的一样呢”。
	elif 2>=player_choice_number-comp_number>=1 or (-3)>=player_choice_number-comp_number>=(-4):
		return "您赢了！" #如果满足上述条件，则用户获胜，显示“您赢了”。
	else:
		return "计算机赢了！" #如果上述两个条件都不满足，则计算机获胜，显示“计算机赢了”。
		
print("欢迎使用RPSLS游戏")
print("----------------") #输出"-------- "进行分割。
   

print("请输入您的选择:")  #显示用户输入提示。
player_choice_name=input()  #用户通过键盘将自己的游戏选择对象输入，存入变量player_choice#输入选择的游戏对象。     
print("----------------")  #输出"-------- "进行分割。


if player_choice_name  in ("石头,剪刀,布,蜥蜴,史波克"):    
	player_choice_number=name_to_number(player_choice_name) #调用name_to_number()函数将用户的游戏选择对象转换为相应的整数，存入变量player_choice_number。
	comp_name=number_to_name(comp_number) #调用number_to_name()函数将计算机产生的随机数转换为对应的游戏对象。            

	print("您的选择为：%s"%player_choice_name) #显示您的选择。    
	print("计算机的选择为：%s"%comp_name)  #显示计算机的选择。  
	print(rpsls(player_choice_number,comp_number)) #显示根据RPSLS规则的判断结果。   
else:
		print("Error: No Correct Name")#如果用户的选择不是石头/剪刀/布/蜥蜴/史波克中的任意一个，则输出“Error: No Correct Name”。              
